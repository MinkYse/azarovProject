# your_app/tasks.py
from celery import shared_task
import telegram

import asyncio
from .models import Child, Application

from .parser import fetch_emails_from_yandex


@shared_task
def reset_is_paid():
    token = '7532743180:AAEqoxGi2PMFEoVEDNeWw3-qCu181mVcX4M'
    bot = telegram.Bot(token=token)
    user_id = '849192412'
    unpaid_children = Child.objects.filter(is_paid=False, active=True, is_vip=False)

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–∞–∫–∏–µ –¥–µ—Ç–∏, —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    if unpaid_children.exists():
        message = "–î–µ—Ç–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –æ–ø–ª–∞—Ç–∏–ª–∏:\n\n"
        for child in unpaid_children:
            message += f"üë¶ –£—á–µ–Ω–∏–∫: {child.full_name}\n"
            message += f"üè† –ó–∞–ª: {child.hall.name}\n"
            message += f"üìö –û–ø—Ü–∏—è —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏: {child.training_option.name}\n"
            message += "üë®‚Äçüë©‚Äçüëß‚Äçüë¶ –†–æ–¥–∏—Ç–µ–ª–∏:\n"
            for parent in child.parents.all():
                phone_link = f"tel:{parent.phone_number}"  # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –¥–ª—è –∑–≤–æ–Ω–∫–∞
                message += f'    üìõ –ò–º—è: {parent.full_name}\n'
                message += f'    ‚òéÔ∏è –¢–µ–ª–µ—Ñ–æ–Ω: <a href="{phone_link}">{parent.phone_number}</a>\n'
            message += "\n"  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç—Å—Ç—É–ø –º–µ–∂–¥—É –¥–µ—Ç—å–º–∏
    else:
        message = "–í—Å–µ –¥–µ—Ç–∏ –æ–ø–ª–∞—Ç–∏–ª–∏."

    asyncio.run(bot.send_message(chat_id=user_id, text=message, parse_mode='HTML'))
    Child.objects.filter(is_vip=False, active=True).update(is_paid=False)
    # print('hello from celery')
    # return


@shared_task
def pars_email():
    fetch_emails_from_yandex()
